def validSolution(board):
    for row in board:
        flag = isValid(row)
        if flag == 1:
            continue
        elif flag == 0:
            print("row false")
            return False
    for i in range(0, 9):
        col = []
        for j in range(0, 9):
            col.append(board[j][i])
        print(col)
        flag = isValid(col)
        if flag == 1:
            continue
        elif flag == 0:
            print("col false")
            return False
    for x in range(0, 7, 3):
        for y in range(0, 7, 3):
            block = []
            n = 0
            while n <= 2:
                block += board[x+n][y:y+3]
                n += 1
            flag = isValid(block)
            if flag == 1:
                continue
            elif flag == 0:
                print("block false")
                return False
    print("true")
    return True


def isValid(num_list):
    if len(set(num_list)) == 9 and 0 not in num_list:
        return 1
    else:
        return 0


# validSolution([
#     [5, 3, 4, 6, 7, 8, 9, 1, 2],
#     [6, 7, 2, 1, 9, 0, 3, 4, 9],
#     [1, 0, 0, 3, 4, 2, 5, 6, 0],
#     [8, 5, 9, 7, 6, 1, 0, 2, 0],
#     [4, 2, 6, 8, 5, 3, 7, 9, 1],
#     [7, 1, 3, 9, 2, 4, 8, 5, 6],
#     [9, 0, 1, 5, 3, 7, 2, 1, 4],
#     [2, 8, 7, 4, 1, 9, 6, 3, 5],
#     [3, 0, 0, 4, 8, 1, 1, 7, 9]
# ])
#
# validSolution([
#     [5, 3, 4, 6, 7, 8, 9, 1, 2],
#     [6, 7, 2, 1, 9, 5, 3, 4, 8],
#     [1, 9, 8, 3, 4, 2, 5, 6, 7],
#     [8, 5, 9, 7, 6, 1, 4, 2, 3],
#     [4, 2, 6, 8, 5, 3, 7, 9, 1],
#     [7, 1, 3, 9, 2, 4, 8, 5, 6],
#     [9, 6, 1, 5, 3, 7, 2, 8, 4],
#     [2, 8, 7, 4, 1, 9, 6, 3, 5],
#     [3, 4, 5, 2, 8, 6, 1, 7, 9]
# ])
# validSolution([
#     [5, 3, 4, 6, 7, 8, 9, 1, 2],
#     [6, 7, 2, 1, 9, 5, 3, 4, 8],
#     [1, 9, 8, 3, 4, 2, 5, 6, 7],
#     [8, 5, 9, 7, 6, 1, 4, 2, 3],
#     [4, 2, 6, 8, 5, 3, 7, 9, 1],
#     [7, 1, 3, 9, 2, 4, 8, 5, 6],
#     [9, 6, 1, 5, 3, 7, 2, 8, 4],
#     [2, 8, 7, 4, 1, 9, 6, 3, 5],
#     [3, 4, 5, 2, 8, 6, 1, 7, 9]
# ])
# validSolution([[5, 3, 4, 6, 7, 8, 9, 1, 2],
#                                   [6, 7, 2, 1, 9, 5, 3, 4, 8],
#                                   [1, 9, 8, 3, 4, 2, 5, 6, 7],
#                                   [8, 5, 9, 7, 6, 1, 4, 2, 3],
#                                   [4, 2, 6, 8, 5, 3, 7, 9, 1],
#                                   [7, 1, 3, 9, 2, 4, 8, 5, 6],
#                                   [9, 6, 1, 5, 3, 7, 2, 8, 4],
#                                   [2, 8, 7, 4, 1, 9, 6, 3, 5],
#                                   [3, 4, 5, 2, 8, 6, 1, 7, 9]])
#
# validSolution([[5, 3, 4, 6, 7, 8, 9, 1, 2],
#                                   [6, 7, 2, 1, 9, 0, 3, 4, 9],
#                                   [1, 0, 0, 3, 4, 2, 5, 6, 0],
#                                   [8, 5, 9, 7, 6, 1, 0, 2, 0],
#                                   [4, 2, 6, 8, 5, 3, 7, 9, 1],
#                                   [7, 1, 3, 9, 2, 4, 8, 5, 6],
#                                   [9, 0, 1, 5, 3, 7, 2, 1, 4],
#                                   [2, 8, 7, 4, 1, 9, 6, 3, 5],
#                                   [3, 0, 0, 4, 8, 1, 1, 7, 9]])

# validSolution([[1, 3, 2, 5, 7, 9, 4, 6, 8]
#                                      , [4, 9, 8, 2, 6, 1, 3, 7, 5]
#                                      , [7, 5, 6, 3, 8, 4, 2, 1, 9]
#                                      , [6, 4, 3, 1, 5, 8, 7, 9, 2]
#                                      , [5, 2, 1, 7, 9, 3, 8, 4, 6]
#                                      , [9, 8, 7, 4, 2, 6, 5, 3, 1]
#                                      , [2, 1, 4, 9, 3, 5, 6, 8, 7]
#                                      , [3, 6, 5, 8, 1, 7, 9, 2, 4]
#                                      , [8, 7, 9, 6, 4, 2, 1, 5, 3]])
#
validSolution([[1, 3, 2, 5, 7, 9, 4, 6, 8]
             , [4, 9, 8, 2, 6, 1, 3, 7, 5]
             , [7, 5, 6, 3, 8, 4, 2, 1, 9]
             , [6, 4, 3, 1, 5, 8, 7, 9, 2]
             , [5, 2, 1, 7, 9, 3, 8, 4, 6]
             , [9, 8, 7, 4, 2, 6, 5, 3, 1]
             , [2, 1, 4, 9, 3, 5, 6, 8, 7]
             , [3, 6, 5, 8, 1, 7, 9, 2, 4]
             , [8, 7, 9, 6, 4, 2, 1, 3, 5]])
